#!/usr/bin/env python3
"""
–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ñ–∏–ª—å—Ç—Ä–∞ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
"""
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –≤ –ø—É—Ç—å
sys.path.append(str(Path(__file__).parent))

from src.db.database import get_db
from src.db.models import Filter
from datetime import datetime

def create_test_filter():
    """–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∏–ª—å—Ç—Ä –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID=1"""
    try:
        db = next(get_db())
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∏–ª—å—Ç—Ä
        test_filter = Filter(
            user_id=1,
            name="–¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∏–ª—å—Ç—Ä - –†–∏–º",
            city="Roma",
            min_price=800,
            max_price=2000,
            min_rooms=2,
            max_rooms=4,
            property_type="apartment",
            is_active=True,
            notification_enabled=True,
            notification_frequency_hours=1,  # 1 —á–∞—Å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            created_at=datetime.utcnow(),
            updated_at=datetime.utcnow()
        )
        
        db.add(test_filter)
        db.commit()
        db.refresh(test_filter)
        
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∏–ª—å—Ç—Ä:")
        print(f"   ID: {test_filter.id}")
        print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {test_filter.name}")
        print(f"   –ì–æ—Ä–æ–¥: {test_filter.city}")
        print(f"   –¶–µ–Ω–∞: {test_filter.min_price}-{test_filter.max_price} EUR")
        print(f"   –ö–æ–º–Ω–∞—Ç—ã: {test_filter.min_rooms}-{test_filter.max_rooms}")
        print(f"   –ê–∫—Ç–∏–≤–µ–Ω: {test_filter.is_active}")
        print(f"   –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {test_filter.notification_enabled}")
        
        return test_filter.id
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–∞: {e}")
        return None
    finally:
        db.close()

def delete_test_filters():
    """–£–¥–∞–ª—è–µ—Ç –≤—Å–µ —Ç–µ—Å—Ç–æ–≤—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã"""
    try:
        db = next(get_db())
        
        # –£–¥–∞–ª—è–µ–º –≤—Å–µ —Ñ–∏–ª—å—Ç—Ä—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID=1
        deleted_count = db.query(Filter).filter(Filter.user_id == 1).delete()
        db.commit()
        
        print(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ {deleted_count} —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤: {e}")
    finally:
        db.close()

def list_filters():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–µ —Ñ–∏–ª—å—Ç—Ä—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    try:
        db = next(get_db())
        
        filters = db.query(Filter).filter(Filter.user_id == 1).all()
        
        if not filters:
            print("üìã –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç —Ñ–∏–ª—å—Ç—Ä–æ–≤")
            return
        
        print(f"üìã –ù–∞–π–¥–µ–Ω–æ {len(filters)} —Ñ–∏–ª—å—Ç—Ä–æ–≤:")
        for f in filters:
            status = "‚úÖ –∞–∫—Ç–∏–≤–µ–Ω" if f.is_active else "‚ùå –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω"
            notifications = "üîî –≤–∫–ª" if f.notification_enabled else "üîï –≤—ã–∫–ª"
            print(f"   {f.id}: '{f.name}' ({f.city}, {f.min_price}-{f.max_price} EUR) - {status}, {notifications}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤: {e}")
    finally:
        db.close()

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    if len(sys.argv) > 1:
        action = sys.argv[1].lower()
        
        if action == "create":
            filter_id = create_test_filter()
            if filter_id:
                print(f"\nüí° –¢–µ–ø–µ—Ä—å –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Å—Ç: python test_notification_worker_debug.py")
                
        elif action == "delete":
            delete_test_filters()
            
        elif action == "list":
            list_filters()
            
        else:
            print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ: {action}")
            print("–î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è: create, delete, list")
    else:
        print("üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã–º–∏ —Ñ–∏–ª—å—Ç—Ä–∞–º–∏")
        print("\n–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:")
        print("  python create_test_filter.py create  - —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∏–ª—å—Ç—Ä")
        print("  python create_test_filter.py list    - –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Ñ–∏–ª—å—Ç—Ä—ã")
        print("  python create_test_filter.py delete  - —É–¥–∞–ª–∏—Ç—å –≤—Å–µ —Ñ–∏–ª—å—Ç—Ä—ã")

if __name__ == "__main__":
    main() 