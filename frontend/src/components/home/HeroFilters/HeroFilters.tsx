import React, { useState } from "react";
import { useNavigate } from "react-router-dom";
import { useFilterStore } from "@/store/filterStore";
import { City, PropertyType, TransactionType } from "@/types";
import SubscriptionModal from "@/components/common/SubscriptionModal";
import styles from "./HeroFilters.module.scss";

// –ì–æ—Ä–æ–¥–∞ –ò—Ç–∞–ª–∏–∏
const italianCities: City[] = [
  { id: "roma", name: "–†–∏–º" },
  { id: "milano", name: "–ú–∏–ª–∞–Ω" },
  { id: "napoli", name: "–ù–µ–∞–ø–æ–ª—å" },
  { id: "torino", name: "–¢—É—Ä–∏–Ω" },
  { id: "firenze", name: "–§–ª–æ—Ä–µ–Ω—Ü–∏—è" },
  { id: "bologna", name: "–ë–æ–ª–æ–Ω—å—è" },
  { id: "venezia", name: "–í–µ–Ω–µ—Ü–∏—è" },
  { id: "genova", name: "–ì–µ–Ω—É—è" },
  { id: "palermo", name: "–ü–∞–ª–µ—Ä–º–æ" },
  { id: "verona", name: "–í–µ—Ä–æ–Ω–∞" },
];

const HeroFilters: React.FC = () => {
  const navigate = useNavigate();
  const filters = useFilterStore();
  const [showSubscriptionModal, setShowSubscriptionModal] = useState(false);

  const handleSearch = (event: React.FormEvent) => {
    event.preventDefault();

    const queryParams = new URLSearchParams();

    // –ì–æ—Ä–æ–¥ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä)
    if (filters.city?.name) {
      queryParams.append("city", filters.city.name);
    } else {
      queryParams.append("city", "Roma"); // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
    }

    // –¢–∏–ø –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏
    if (filters.propertyType && filters.propertyType !== "all") {
      queryParams.append("property_type", filters.propertyType);
    }

    // –¶–µ–Ω–∞
    if (filters.priceMin) {
      queryParams.append("min_price", filters.priceMin.toString());
    }
    if (filters.priceMax) {
      queryParams.append("max_price", filters.priceMax.toString());
    }

    // –ö–æ–º–Ω–∞—Ç—ã
    if (filters.rooms && filters.rooms.length > 0) {
      const minRooms = Math.min(...filters.rooms);
      const maxRooms = Math.max(...filters.rooms);
      queryParams.append("min_rooms", String(minRooms));
      if (minRooms !== maxRooms) {
        queryParams.append("max_rooms", String(maxRooms));
      }
    }

    // –ü–ª–æ—â–∞–¥—å
    if (filters.areaMin) {
      queryParams.append("min_area", String(filters.areaMin));
    }
    if (filters.areaMax) {
      queryParams.append("max_area", String(filters.areaMax));
    }

    // –†–∞–π–æ–Ω/–º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ (–ø–æ–∫–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ API, –Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –¥–ª—è –±—É–¥—É—â–µ–≥–æ)
    if (filters.locationQuery) {
      queryParams.append("locationQuery", filters.locationQuery);
    }

    // –ù–∞–≤–∏–≥–∞—Ü–∏—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
    navigate(`/search?${queryParams.toString()}`);
  };

  const handleSubscribeClick = () => {
    setShowSubscriptionModal(true);
  };

  const getSubscriptionFilters = () => {
    return {
      city: filters.city?.name || undefined,
      min_price: filters.priceMin || undefined,
      max_price: filters.priceMax || undefined,
      min_rooms:
        filters.rooms && filters.rooms.length > 0
          ? Math.min(...filters.rooms)
          : undefined,
      max_rooms:
        filters.rooms && filters.rooms.length > 0
          ? Math.max(...filters.rooms)
          : undefined,
      property_type:
        filters.propertyType === "all" ? undefined : filters.propertyType,
    };
  };

  return (
    <section className={styles.heroFiltersContainer}>
      <h1 className={styles.title}>–ù–∞–π–¥–∏—Ç–µ –∏–¥–µ–∞–ª—å–Ω–æ–µ –∂–∏–ª—å–µ –≤ –ò—Ç–∞–ª–∏–∏</h1>
      <p className={styles.subtitle}>
        –ê–≥—Ä–µ–≥–∞—Ç–æ—Ä –æ–±—ä—è–≤–ª–µ–Ω–∏–π —Å Idealista, Immobiliare –∏ –¥—Ä—É–≥–∏—Ö —Å–∞–π—Ç–æ–≤
      </p>
      <form onSubmit={handleSearch} className={styles.form}>
        <div className={styles.formGroup}>
          <select
            value={filters.city?.id || ""}
            onChange={(e) => {
              const selectedCity =
                italianCities.find((c) => c.id === e.target.value) || null;
              filters.setCity(selectedCity);
            }}
            className={styles.select}
          >
            <option value="" disabled>
              –í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥
            </option>
            {italianCities.map((c) => (
              <option key={c.id} value={c.id}>
                {c.name}
              </option>
            ))}
          </select>
        </div>

        <div className={styles.formGroup}>
          <select
            value={filters.transactionType}
            onChange={(e) =>
              filters.setTransactionType(e.target.value as TransactionType)
            }
            className={styles.select}
          >
            <option value="rent">–ê—Ä–µ–Ω–¥–∞</option>
            <option value="buy">–ü–æ–∫—É–ø–∫–∞</option>
          </select>
        </div>

        <div className={styles.formGroup}>
          <select
            value={filters.propertyType}
            onChange={(e) =>
              filters.setPropertyType(e.target.value as PropertyType)
            }
            className={styles.select}
          >
            <option value="all">–í—Å–µ —Ç–∏–ø—ã</option>
            <option value="apartment">–ö–≤–∞—Ä—Ç–∏—Ä–∞</option>
            <option value="house">–î–æ–º</option>
            <option value="penthouse">–ü–µ–Ω—Ç—Ö–∞—É—Å</option>
            <option value="studio">–°—Ç—É–¥–∏—è</option>
            <option value="room">–ö–æ–º–Ω–∞—Ç–∞</option>
          </select>
        </div>

        <div className={styles.formGroup}>
          <select
            value={
              filters.rooms && filters.rooms.length === 1
                ? String(filters.rooms[0])
                : ""
            }
            onChange={(e) =>
              filters.setRooms(
                e.target.value === "" ? null : [Number(e.target.value)]
              )
            }
            className={styles.select}
          >
            <option value="">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–Ω–∞—Ç</option>
            <option value="0">–°—Ç—É–¥–∏—è</option>
            <option value="1">1 –∫–æ–º–Ω–∞—Ç–∞</option>
            <option value="2">2 –∫–æ–º–Ω–∞—Ç—ã</option>
            <option value="3">3 –∫–æ–º–Ω–∞—Ç—ã</option>
            <option value="4">4 –∫–æ–º–Ω–∞—Ç—ã</option>
            <option value="5">5+ –∫–æ–º–Ω–∞—Ç</option>
          </select>
        </div>

        <div className={`${styles.formGroup} ${styles.priceRange}`}>
          <input
            type="number"
            placeholder="–¶–µ–Ω–∞ –æ—Ç ‚Ç¨"
            value={filters.priceMin === null ? "" : filters.priceMin}
            onChange={(e) =>
              filters.setPriceMin(
                e.target.value === "" ? null : Number(e.target.value)
              )
            }
            min="0"
            className={styles.input}
          />
          <span className={styles.priceSeparator}>‚Äî</span>
          <input
            type="number"
            placeholder="–¥–æ ‚Ç¨"
            value={filters.priceMax === null ? "" : filters.priceMax}
            onChange={(e) =>
              filters.setPriceMax(
                e.target.value === "" ? null : Number(e.target.value)
              )
            }
            min={filters.priceMin === null ? 0 : filters.priceMin}
            className={styles.input}
          />
        </div>

        <div className={`${styles.formGroup} ${styles.locationInput}`}>
          <input
            type="text"
            placeholder="–†–∞–π–æ–Ω, —É–ª–∏—Ü–∞, –º–µ—Ç—Ä–æ..."
            value={filters.locationQuery}
            onChange={(e) => filters.setLocationQuery(e.target.value)}
            className={styles.input}
          />
        </div>

        <div className={styles.buttonGroup}>
          <button type="submit" className={styles.submitButton}>
            –ù–∞–π—Ç–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
          </button>
          <button
            type="button"
            className={styles.subscribeButton}
            onClick={handleSubscribeClick}
          >
            üîî –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
          </button>
        </div>
      </form>

      <div className={styles.subscriptionPromo}>
        <div className={styles.promoContent}>
          <div className={styles.promoIcon}>üì±</div>
          <div className={styles.promoText}>
            <h3>–ù–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–µ –ª—É—á—à–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è!</h3>
            <p>
              –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram –∏ –ø–µ—Ä–≤—ã–º–∏ —É–∑–Ω–∞–≤–∞–π—Ç–µ –æ –Ω–æ–≤—ã—Ö
              –æ–±—ä—è–≤–ª–µ–Ω–∏—è—Ö
            </p>
          </div>
        </div>
      </div>

      <SubscriptionModal
        isOpen={showSubscriptionModal}
        onClose={() => setShowSubscriptionModal(false)}
        filters={getSubscriptionFilters()}
      />
    </section>
  );
};

export default HeroFilters;
