import axios from 'axios';

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –±–∞–∑–æ–≤–æ–≥–æ URL API
const getApiBaseUrl = (): string => {
  // 1. –ï—Å–ª–∏ –µ—Å—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è - –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ—ë
  if (import.meta.env.VITE_API_URL) {
    return import.meta.env.VITE_API_URL;
  }

  // 2. –î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
  if (import.meta.env.DEV || window.location.hostname === 'localhost') {
    return 'http://localhost:8000';
  }

  // 3. –î–ª—è Railway - –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ –ø—É—Ç–∏ (same origin)
  if (window.location.hostname.includes('railway.app')) {
    return ''; // –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ = –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ –ø—É—Ç–∏ –∫ —Ç–æ–º—É –∂–µ –¥–æ–º–µ–Ω—É
  }

  // 4. Fallback –¥–ª—è –¥—Ä—É–≥–∏—Ö –æ–∫—Ä—É–∂–µ–Ω–∏–π
  return 'https://itarentbot-production.up.railway.app';
};

const API_BASE_URL = getApiBaseUrl();

console.log('üîó API Base URL:', API_BASE_URL);
console.log('üåç Current environment:', {
  isDev: import.meta.env.DEV,
  hostname: window.location.hostname,
  viteApiUrl: import.meta.env.VITE_API_URL,
  isRailway: window.location.hostname.includes('railway.app'),
});

const apiClient = axios.create({
  baseURL: `${API_BASE_URL}/api/v1`, // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ—Ñ–∏–∫—Å API
  headers: {
    'Content-Type': 'application/json',
  },
  timeout: 15000, // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ç–∞–π–º–∞—É—Ç –¥–æ 15 —Å–µ–∫—É–Ω–¥
});

// –ü–µ—Ä–µ—Ö–≤–∞—Ç—á–∏–∫ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
apiClient.interceptors.request.use(
  (config) => {
    // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ —Ç–æ–∫–µ–Ω —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ localStorage
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±–æ–ª–µ–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –∏–ª–∏ Zustand/Context –¥–ª—è —Ç–æ–∫–µ–Ω–∞
    const token = localStorage.getItem('authToken');
    if (token) {
      config.headers.Authorization = `Bearer ${token}`;
    }
    return config;
  },
  (error) => {
    console.error('Request interceptor error:', error);
    return Promise.reject(error);
  }
);

// –ü–µ—Ä–µ—Ö–≤–∞—Ç—á–∏–∫ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–≤–µ—Ç–æ–≤ –∏ –æ—à–∏–±–æ–∫
apiClient.interceptors.response.use(
  (response) => {
    return response;
  },
  (error) => {
    console.error('API Error:', error);

    // –ï—Å–ª–∏ API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –Ω–æ –Ω–µ –ª–æ–º–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    if (error.code === 'ECONNABORTED' || error.code === 'ERR_NETWORK') {
      console.warn('API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ');
    }

    return Promise.reject(error);
  }
);

export default apiClient;

// --- –ú–æ–∫–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ UI –ø–æ–∫–∞ –Ω–µ—Ç –±—ç–∫–µ–Ω–¥–∞ –¥–ª—è –Ω–∏—Ö ---
import { City, FilterState, Listing, ApiResponse } from '../types'; // –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—É—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π

const mockCitiesData: City[] = [
  { id: 'rome', name: '–†–∏–º' },
  { id: 'milan', name: '–ú–∏–ª–∞–Ω' },
  // ... –¥—Ä—É–≥–∏–µ –≥–æ—Ä–æ–¥–∞ –ò—Ç–∞–ª–∏–∏
];

export const fetchCities = async (): Promise<City[]> => {
  console.log('apiClient: fetchCities (mocked)');
  return new Promise((resolve) =>
    setTimeout(() => resolve(mockCitiesData), 300)
  );
};

export const fetchLocationSuggestions = async (
  query: string
): Promise<string[]> => {
  console.log(
    `apiClient: fetchLocationSuggestions (mocked) for query: ${query}`
  );
  const mockLocations = [
    'Trastevere',
    'Monti',
    'Prati',
    'Testaccio',
    'Termini',
    'Vaticano',
    'Fontana di Trevi',
    'Colosseo',
    'San Giovanni',
    'EUR',
  ];
  return new Promise((resolve) => {
    setTimeout(() => {
      if (!query) {
        resolve([]);
        return;
      }
      const results = mockLocations.filter((loc) =>
        loc.toLowerCase().includes(query.toLowerCase())
      );
      resolve(results.slice(0, 5)); // Limit suggestions
    }, 200);
  });
};

// –ú–æ–∫–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è fetchListingsFromApi –∏–∑ –ø–ª–∞–Ω–∞, –Ω–æ –æ–Ω–∞ –Ω–µ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –Ω–∞–ø—Ä—è–º—É—é,
// —Ç–∞–∫ –∫–∞–∫ –ª–æ–≥–∏–∫–∞ —Ñ–µ—Ç—á–∏–Ω–≥–∞ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–∞ –≤ listingStore. –û—Å—Ç–∞–≤–ª–µ–Ω–∞ –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏ –∏–ª–∏ –µ—Å–ª–∏ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –ø–æ–∑–∂–µ.
/*
const mockListings: Listing[] = [
  {
    id: '1',
    title: '2-–∫–æ–º–Ω. –∫–≤., 75 –º¬≤, –¶–µ–Ω—Ç—Ä',
    price: 1500,
    currency: '‚Ç¨',
    address: '–†–∏–º, —É–ª. –ö–æ—Ä—Å–æ, 10',
    metroStations: [{ name: 'Spagna', distance: '5 –º–∏–Ω' }],
    imageUrls: ['https://via.placeholder.com/300x200/AABBCC/FFFFFF?Text=App1+View1', 'https://via.placeholder.com/300x200/CCDDEE/FFFFFF?Text=App1+View2'],
    source: 'Immobiliare.it',
    originalUrl: '#',
    type: '2-–∫–æ–º–Ω. –∫–≤.',
    area: 75,
    floor: '3/5 —ç—Ç–∞–∂',
    renovationType: '–ï–≤—Ä–æ—Ä–µ–º–æ–Ω—Ç',
  },
  {
    id: '2',
    title: '–°—Ç—É–¥–∏—è, 40 –º¬≤, –¢—Ä–∞—Å—Ç–µ–≤–µ—Ä–µ',
    price: 900,
    currency: '‚Ç¨',
    address: '–†–∏–º, –ø–ª. –°–∞–Ω—Ç–∞-–ú–∞—Ä–∏—è-–∏–Ω-–¢—Ä–∞—Å—Ç–µ–≤–µ—Ä–µ, 5',
    imageUrls: ['https://via.placeholder.com/300x200/112233/FFFFFF?Text=Studio1'],
    source: 'Idealista',
    originalUrl: '#',
    type: '–°—Ç—É–¥–∏—è',
    area: 40,
    floor: '1/3 —ç—Ç–∞–∂',
    commission: '–ë–µ–∑ –∫–æ–º–∏—Å—Å–∏–∏'
  },
];

export const fetchListingsFromApi_Mock = async (
  filters: FilterState,
  page: number,
  limit: number
): Promise<ApiResponse<Listing>> => {
  console.log('(Mock) Fetching with filters:', filters, 'Page:', page, 'Limit:', limit);
  return new Promise((resolve) => {
    setTimeout(() => {
      let filtered = [...mockListings];
      // TODO: –ü—Ä–∏–º–µ–Ω–∏—Ç—å –ª–æ–≥–∏–∫—É —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∏–∑ –ø–ª–∞–Ω–∞, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –º–æ–∫–∏
      const total = filtered.length;
      const paginatedData = filtered.slice((page - 1) * limit, page * limit);
      resolve({ data: paginatedData, total });
    }, 500);
  });
};
*/
