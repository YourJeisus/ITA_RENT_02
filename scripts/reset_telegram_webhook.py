#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–±—Ä–æ—Å–∞ Telegram webhook –∏ –æ—á–∏—Å—Ç–∫–∏ pending updates
"""
import requests
import os
from pathlib import Path
from dotenv import load_dotenv

ROOT_DIR = Path(__file__).resolve().parent.parent
load_dotenv(dotenv_path=ROOT_DIR / '.env')

BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")

if not BOT_TOKEN:
    print("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω")
    exit(1)

def reset_webhook():
    """–°–±—Ä–∞—Å—ã–≤–∞–µ–º webhook"""
    url = f"https://api.telegram.org/bot{BOT_TOKEN}/deleteWebhook"
    params = {"drop_pending_updates": True}
    
    response = requests.post(url, params=params)
    
    if response.status_code == 200:
        print("‚úÖ Webhook —É–¥–∞–ª–µ–Ω, pending updates –æ—á–∏—â–µ–Ω—ã")
        return True
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
        return False

def get_me():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç"""
    url = f"https://api.telegram.org/bot{BOT_TOKEN}/getMe"
    
    response = requests.get(url)
    
    if response.status_code == 200:
        data = response.json()
        print(f"‚úÖ –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω: @{data['result']['username']}")
        return True
    else:
        print(f"‚ùå –ë–æ—Ç –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç: {response.text}")
        return False

if __name__ == "__main__":
    print("ü§ñ –°–±—Ä–æ—Å Telegram webhook...")
    
    if get_me():
        if reset_webhook():
            print("üéâ –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –±–æ—Ç–∞ –Ω–∞ Railway")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–±—Ä–æ—Å–∏—Ç—å webhook")
    else:
        print("‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –¥–æ—Å—Ç—É–ø–æ–º –∫ –±–æ—Ç—É")
