#!/usr/bin/env python3
"""
‚ö° –¢–ï–°–¢ –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò –ü–ê–†–°–ï–†–ê

–°—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç —Å–∫–æ—Ä–æ—Å—Ç—å —Ä–∞–±–æ—Ç—ã —Å –≤–∫–ª—é—á–µ–Ω–Ω—ã–º –∏ –≤—ã–∫–ª—é—á–µ–Ω–Ω—ã–º –≥–µ–æ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
"""
import sys
import asyncio
import time
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å
project_root = Path(__file__).parent.parent.parent
sys.path.insert(0, str(project_root))

from src.parsers.immobiliare_parser import ImmobiliareParser


async def test_performance_comparison():
    """
    –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Å –≥–µ–æ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ–º –∏ –±–µ–∑
    """
    print("‚ö° –¢–ï–°–¢ –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò –ü–ê–†–°–ï–†–ê IMMOBILIARE.IT")
    print("=" * 70)
    print("üéØ –¶–µ–ª—å: –°—Ä–∞–≤–Ω–∏—Ç—å —Å–∫–æ—Ä–æ—Å—Ç—å —Å –≥–µ–æ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ–º –∏ –±–µ–∑")
    print("üìÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º: 10 —Å—Ç—Ä–∞–Ω–∏—Ü –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è")
    print("=" * 70)
    
    test_pages = 10
    
    # –¢–ï–°–¢ 1: –ë–ï–ó –ì–ï–û–ö–û–î–ò–†–û–í–ê–ù–ò–Ø
    print(f"\nüöÄ –¢–ï–°–¢ 1: –ë–ï–ó –ì–ï–û–ö–û–î–ò–†–û–í–ê–ù–ò–Ø")
    print("-" * 50)
    
    parser_no_geo = ImmobiliareParser(enable_geocoding=False)
    
    start_time = time.time()
    listings_no_geo = await parser_no_geo.scrape_all_listings(max_pages=test_pages)
    end_time = time.time()
    
    time_no_geo = end_time - start_time
    
    print(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –ë–ï–ó –≥–µ–æ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print(f"   üìã –û–±—ä—è–≤–ª–µ–Ω–∏–π: {len(listings_no_geo)}")
    print(f"   ‚è±Ô∏è  –í—Ä–µ–º—è: {time_no_geo:.2f} —Å–µ–∫—É–Ω–¥")
    print(f"   ‚ö° –°–∫–æ—Ä–æ—Å—Ç—å: {len(listings_no_geo)/time_no_geo:.2f} –æ–±—ä—è–≤–ª–µ–Ω–∏–π/—Å–µ–∫")
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º
    with_coords_no_geo = sum(1 for listing in listings_no_geo if listing.get('latitude'))
    print(f"   üó∫Ô∏è  –° –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏: {with_coords_no_geo}/{len(listings_no_geo)}")
    
    # –¢–ï–°–¢ 2: –° –ì–ï–û–ö–û–î–ò–†–û–í–ê–ù–ò–ï–ú
    print(f"\nüó∫Ô∏è  –¢–ï–°–¢ 2: –° –ì–ï–û–ö–û–î–ò–†–û–í–ê–ù–ò–ï–ú")
    print("-" * 50)
    
    parser_with_geo = ImmobiliareParser(enable_geocoding=True)
    
    start_time = time.time()
    listings_with_geo = await parser_with_geo.scrape_all_listings(max_pages=test_pages)
    end_time = time.time()
    
    time_with_geo = end_time - start_time
    
    print(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –° –≥–µ–æ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ–º:")
    print(f"   üìã –û–±—ä—è–≤–ª–µ–Ω–∏–π: {len(listings_with_geo)}")
    print(f"   ‚è±Ô∏è  –í—Ä–µ–º—è: {time_with_geo:.2f} —Å–µ–∫—É–Ω–¥")
    print(f"   ‚ö° –°–∫–æ—Ä–æ—Å—Ç—å: {len(listings_with_geo)/time_with_geo:.2f} –æ–±—ä—è–≤–ª–µ–Ω–∏–π/—Å–µ–∫")
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º
    with_coords_with_geo = sum(1 for listing in listings_with_geo if listing.get('latitude'))
    print(f"   üó∫Ô∏è  –° –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏: {with_coords_with_geo}/{len(listings_with_geo)}")
    
    # –°–†–ê–í–ù–ï–ù–ò–ï
    print(f"\nüìä –°–†–ê–í–ù–ï–ù–ò–ï –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò:")
    print("=" * 70)
    
    speed_improvement = ((time_with_geo - time_no_geo) / time_with_geo) * 100
    
    print(f"‚è±Ô∏è  –ë–ï–ó –≥–µ–æ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è: {time_no_geo:.2f} —Å–µ–∫")
    print(f"‚è±Ô∏è  –° –≥–µ–æ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ–º:  {time_with_geo:.2f} —Å–µ–∫")
    print(f"üìà –†–∞–∑–Ω–∏—Ü–∞ –≤–æ –≤—Ä–µ–º–µ–Ω–∏:  {abs(time_with_geo - time_no_geo):.2f} —Å–µ–∫")
    
    if time_no_geo < time_with_geo:
        print(f"üöÄ –£—Å–∫–æ—Ä–µ–Ω–∏–µ –ë–ï–ó –≥–µ–æ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è: {speed_improvement:.1f}%")
    else:
        print(f"üêå –ó–∞–º–µ–¥–ª–µ–Ω–∏–µ –ë–ï–ó –≥–µ–æ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è: {abs(speed_improvement):.1f}%")
    
    # –°–∫–æ—Ä–æ—Å—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–π –≤ —Å–µ–∫—É–Ω–¥—É
    speed_no_geo = len(listings_no_geo) / time_no_geo
    speed_with_geo = len(listings_with_geo) / time_with_geo
    
    print(f"‚ö° –°–∫–æ—Ä–æ—Å—Ç—å –ë–ï–ó –≥–µ–æ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è: {speed_no_geo:.2f} –æ–±—ä—è–≤–ª–µ–Ω–∏–π/—Å–µ–∫")
    print(f"‚ö° –°–∫–æ—Ä–æ—Å—Ç—å –° –≥–µ–æ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ–º:  {speed_with_geo:.2f} –æ–±—ä—è–≤–ª–µ–Ω–∏–π/—Å–µ–∫")
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º
    photos_no_geo = sum(len(listing.get('images', [])) for listing in listings_no_geo)
    photos_with_geo = sum(len(listing.get('images', [])) for listing in listings_with_geo)
    
    print(f"\nüì∏ –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–û –§–û–¢–û–ì–†–ê–§–ò–Ø–ú:")
    print(f"   –ë–ï–ó –≥–µ–æ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è: {photos_no_geo} —Ñ–æ—Ç–æ")
    print(f"   –° –≥–µ–æ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ–º:  {photos_with_geo} —Ñ–æ—Ç–æ")
    
    print(f"\nüéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø:")
    if time_no_geo < time_with_geo:
        print("   ‚úÖ –î–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å–∫–æ—Ä–æ—Å—Ç–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ enable_geocoding=False")
        print("   üìç –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–∑–∂–µ –æ—Ç–¥–µ–ª—å–Ω—ã–º –ø—Ä–æ—Ü–µ—Å—Å–æ–º")
    else:
        print("   ‚úÖ –ì–µ–æ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ –≤–ª–∏—è–µ—Ç –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å")
        print("   üó∫Ô∏è  –ú–æ–∂–Ω–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å enable_geocoding=True")


if __name__ == "__main__":
    asyncio.run(test_performance_comparison()) 