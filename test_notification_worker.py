#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ notification worker
–ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–±–æ—Ç—É —Å Telegram –∏ WhatsApp —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏
"""
import os
import sys
import asyncio
import logging
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –≤ –ø—É—Ç—å
sys.path.append(str(Path(__file__).parent))

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

def load_environment():
    """–ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    try:
        from dotenv import load_dotenv
        load_dotenv()
        logger.info("‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã")
    except ImportError:
        logger.info("üìù python-dotenv –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ")

async def test_notification_worker():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ notification worker"""
    logger.info("üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è notification worker...")
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏ —Ç–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        from src.core.config import settings
        
        logger.info("üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:")
        logger.info(f"   - DEBUG_NOTIFICATIONS: {settings.DEBUG_NOTIFICATIONS}")
        logger.info(f"   - TELEGRAM_BOT_TOKEN: {'‚úÖ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if settings.TELEGRAM_BOT_TOKEN else '‚ùå –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}")
        logger.info(f"   - WHATSAPP_ENABLED: {settings.WHATSAPP_ENABLED}")
        
        if settings.WHATSAPP_ENABLED:
            logger.info("üì± –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è WhatsApp:")
            logger.info(f"   - WHATSAPP_API_TOKEN: {'‚úÖ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if settings.WHATSAPP_API_TOKEN else '‚ùå –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}")
            logger.info(f"   - WHATSAPP_PHONE_NUMBER_ID: {'‚úÖ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if settings.WHATSAPP_PHONE_NUMBER_ID else '‚ùå –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}")
            logger.info(f"   - WHATSAPP_BUSINESS_ACCOUNT_ID: {'‚úÖ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if settings.WHATSAPP_BUSINESS_ACCOUNT_ID else '‚ùå –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        logger.info("üóÑÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
        from src.db.database import get_db
        from src.db.models import User
        
        db = next(get_db())
        users_count = db.query(User).count()
        active_users_count = db.query(User).filter(User.is_active == True).count()
        telegram_users_count = db.query(User).filter(
            User.is_active == True, 
            User.telegram_chat_id.isnot(None)
        ).count()
        
        whatsapp_users_count = 0
        if settings.WHATSAPP_ENABLED:
            whatsapp_users_count = db.query(User).filter(
                User.is_active == True,
                User.whatsapp_phone.isnot(None),
                User.whatsapp_enabled == True
            ).count()
        
        logger.info(f"   - –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {users_count}")
        logger.info(f"   - –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {active_users_count}")
        logger.info(f"   - –° Telegram: {telegram_users_count}")
        logger.info(f"   - –° WhatsApp: {whatsapp_users_count}")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –¥–∏—Å–ø–µ—Ç—á–µ—Ä —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        logger.info("üîî –ó–∞–ø—É—Å–∫ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π...")
        from src.services.notification_service import run_notification_dispatcher
        
        result = await run_notification_dispatcher()
        
        if result:
            logger.info("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞–±–æ—Ç—ã –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞:")
            logger.info(f"   - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {result.get('users_processed', 0)}")
            logger.info(f"   - –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {result.get('notifications_sent', 0)}")
            logger.info(f"   - –û—à–∏–±–æ–∫: {result.get('errors', 0)}")
            
            if result.get('notifications_sent', 0) > 0:
                logger.info("üéâ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã!")
            elif result.get('users_processed', 0) > 0:
                logger.info("‚ÑπÔ∏è –ù–æ–≤—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            else:
                logger.info("‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
        else:
            logger.warning("‚ö†Ô∏è –î–∏—Å–ø–µ—Ç—á–µ—Ä –≤–µ—Ä–Ω—É–ª –ø—É—Å—Ç–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç")
        
        return True
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        return False

async def test_individual_services():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"""
    logger.info("üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤...")
    
    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º Telegram —Å–µ—Ä–≤–∏—Å
        logger.info("üì± –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Telegram —Å–µ—Ä–≤–∏—Å–∞...")
        try:
            from src.services.telegram_bot import TelegramBotService
            telegram_bot = TelegramBotService()
            logger.info("   ‚úÖ Telegram —Å–µ—Ä–≤–∏—Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        except Exception as e:
            logger.error(f"   ‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Telegram —Å–µ—Ä–≤–∏—Å–∞: {e}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º WhatsApp —Å–µ—Ä–≤–∏—Å
        from src.core.config import settings
        if settings.WHATSAPP_ENABLED:
            logger.info("üì± –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ WhatsApp —Å–µ—Ä–≤–∏—Å–∞...")
            from src.services.whatsapp_service import WhatsAppService
            
            try:
                whatsapp_service = WhatsAppService()
                logger.info("   ‚úÖ WhatsApp —Å–µ—Ä–≤–∏—Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
            except Exception as e:
                logger.error(f"   ‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ WhatsApp —Å–µ—Ä–≤–∏—Å–∞: {e}")
        else:
            logger.info("üì± WhatsApp —Å–µ—Ä–≤–∏—Å –æ—Ç–∫–ª—é—á–µ–Ω –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
        
        return True
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤: {e}")
        return False

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    logger.info("üß™ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ notification worker...")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    load_environment()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã
    services_ok = await test_individual_services()
    
    if not services_ok:
        logger.error("‚ùå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–æ–≤ –ø—Ä–æ–≤–∞–ª–µ–Ω–æ")
        return
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º notification worker
    worker_ok = await test_notification_worker()
    
    if worker_ok:
        logger.info("‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        logger.info("üöÄ Notification worker –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")
    else:
        logger.error("‚ùå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ notification worker –ø—Ä–æ–≤–∞–ª–µ–Ω–æ")

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        logger.info("üõë –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1) 